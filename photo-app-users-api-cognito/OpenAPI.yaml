openapi: "3.0.1"
info:
  title: "photo-app-users-api-cognito"
  version: "1.0"
servers:
  - url: "https://mswznh1tv3.execute-api.eu-north-1.amazonaws.com/{basePath}"
    variables:
      basePath:
        default: "Prod"
paths:
  /login:
    post:
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:173952030236:function:photo-app-users-api-cogni-LoginUserHandlerFunction-A5EcIZ3h6w6H/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /users:
    post:
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:173952030236:function:photo-app-users-api-cogni-CreateUserHandlerFunctio-uySRgDaUFHLo/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /users/me:
    get:
      parameters:
        - name: "AccessToken"
          in: "header"
          required: true
          schema:
            type: "string"
      security:
        - PhotoAppApiAuthorizer: []
      x-amazon-apigateway-request-validator: "Validate query string parameters and\
        \ headers"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:173952030236:function:photo-app-users-api-cognito-GetUserHandlerFunction-1sMuLmrzc1yw/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /confirm:
    post:
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:173952030236:function:photo-app-users-api-cogni-ConfirmUserHandlerFuncti-xc5WG3rq179A/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /users/{userName}/add-to-group:
    post:
      parameters:
        - name: "userName"
          in: "path"
          required: true
          schema:
            type: "string"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:173952030236:function:photo-app-users-api-cogni-AddUserToGroupHandlerFun-4C4MjYFbIy6R/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
components:
  securitySchemes:
    PhotoAppApiAuthorizer:
      type: "apiKey"
      name: "AuthorizationUser"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
      x-amazon-apigateway-authorizer:
        providerARNs:
          - "arn:aws:cognito-idp:eu-north-1:173952030236:userpool/eu-north-1_phYr4wh57"
        type: "cognito_user_pools"
x-amazon-apigateway-request-validators:
  Validate query string parameters and headers:
    validateRequestParameters: true
    validateRequestBody: false

